snippet pr "Private Readonly"
private readonly
endsnippet

snippet enum "Namespace Enum"
export namespace $1 {
  export const $2 = $3
  export const list = [$2] as const
  export type Type = typeof $2
}
endsnippet

snippet en "DDD Entity"
import { Entity, Result, UniqueEntityId } from 'f6y/ddd'

type $1Props = {
}

export class $1 extends Entity<$1Props> {
	static create(props: $1Props, id?: UniqueEntityId): Result<$1> {
		return Result.ok(new $1(props, id))
	}
}
endsnippet

snippet vo "DDD ValueObject"
import { ValueObject, Result } from 'f6y/ddd'

type $1Props = {
}

export class $1 extends ValueObject<$1Props> {
	static create(props: $1Props): Result<$1> {
		return Result.ok(new $1(props))
	}
}
endsnippet

snippet uc "DDD UseCase"
import { Result, UseCase } from 'f6y/ddd'

type $1UseCaseRequest = {
}

type $1UseCaseResponse = Result<null>

export class $1UseCase implements UseCase<$1UseCaseRequest, $1UseCaseResponse> {
	execute(request: $1UseCaseRequest): Promise<$1UseCaseResponse> {
		return Result.ok(null)
	}
}
endsnippet
